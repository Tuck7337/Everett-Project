AWSTemplateFormatVersion: 2010-09-09

Description: Stack to create a launch configuration for wordpress EC2 servers.

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Database Parameters
      Parameters:
        - DatabaseName
        - DatabaseHostName
        - DatabaseUsername
        - DatabasePassword
    - Label:
        default: WordPress Parameters
      Parameters:
        - Username
        - Password
        - Email
    - Label:
        default: Other Parameters
      Parameters:
        - EC2ServerInstanceType
    ParameterLabels:
      DatabaseName:
        default: DB name
      DatabaseHostName:
        default: Database endpoint
      DatabaseUsername:
        default: Database User Name
      DatabasePassword:
        default: Database Password
      EC2ServerInstanceType:
        default: Instance Type
      Username:
        default: WordPress admin username
      Password:
        default: WordPress admin password
      Email:
        default: WordPress admin email address

Parameters:

  LatestAL2AmiId: # Locate latest Amazon Linux 2 AMI from public parameter store
    Type: "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>"
    Default: "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"

  DatabaseName:
    AllowedPattern: ^([a-zA-Z0-9]*)$
    Description: The Amazon RDS database name.
    Type: String
    Default: WPDatabase

  DatabaseHostName:
    Description: Amazon RDS DB Endpoint
    Type: String

  DatabaseUsername:
    AllowedPattern: ^([a-zA-Z0-9]*)$
    Description: The Amazon RDS username.
    ConstraintDescription: Must contain only alphanumeric characters (minimum 8; maximum 16).
    MaxLength: 16
    MinLength: 5
    Type: String
    Default: admin

  DatabasePassword:
    AllowedPattern: ^([a-z0-9A-Z`~!#$%^&*()_+,\\-])*$
    ConstraintDescription: Must be letters (upper or lower), numbers, and these special characters '_'`~!#$%^&*()_+,-
    Description: The Amazon RDS password.
    MaxLength: 41
    MinLength: 6
    NoEcho: true
    Type: String
    Default: admin123

  Username:
    AllowedPattern: ^([a-zA-Z0-9]*)$
    Description: WordPress admin username.
    ConstraintDescription: Must contain only alphanumeric characters (minimum 8; maximum 16).
    MaxLength: 16
    MinLength: 5
    Type: String
    Default: wpadmin

  Password:
    AllowedPattern: ^([a-z0-9A-Z`~!#$%^&*()_+,\\-])*$
    ConstraintDescription: Must be letters (upper or lower), numbers, and these special characters '_'`~!#$%^&*()_+,-
    Description: WordPress admin password.
    MaxLength: 41
    MinLength: 6
    NoEcho: true
    Type: String
    Default: wpadmin123

  Email:
    Type: String
    Description: Email address for WordPress notifications

  EC2ServerInstanceType:
    Description: Amazon EC2 Instance Type
    Type: String
    Default: t3.medium
    AllowedValues:
      - t3.small
      - t3.medium
      
  ALBDnsName:
    Description: Application Load Balancer DNS.
    Type: String

  WPElasticFileSystemID:
    Description: Elastic File System ID.
    Type: String

Resources:

  WebTierSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for web instances
      GroupName: Wordpress Servers Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !ImportValue AppInstanceSecurityGroupID
      VpcId:
        !ImportValue VPCID

# Lab Launch Template

  LabLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: LabLaunchTemplate
      LaunchTemplateData:
        UserData:
          "Fn::Base64":
            !Sub
            - |
              #!/bin/bash -xe
              DB_NAME=${DatabaseName}
              DB_HOSTNAME=${DatabaseHostName}
              DB_USERNAME=${DatabaseUsername}
              DB_PASSWORD=${DatabasePassword}
              WP_ADMIN=${Username}
              WP_PASSWORD=${Password}
              WP_EMAIL=${Email}
              LB_HOSTNAME=${ALBDNSName}
              yum update -y
              yum install -y amazon-linux-extras
              yum install -y awslogs httpd mysql gcc-c++
              amazon-linux-extras enable php7.4
              yum clean metadata
              yum install -y php php-{pear,cgi,common,curl,mbstring,gd,mysqlnd,gettext,bcmath,json,xml,fpm,intl,zip,imap,devel,opcache}
              systemctl enable nfs-server.service
              systemctl start nfs-server.service
              mkdir -p /var/www/wordpress
              mount -t nfs4 -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 ${ElasticFileSystem}.efs.${AWS::Region}.amazonaws.com:/ /var/www/wordpress

              ## create site config
              cat <<EOF >/etc/httpd/conf.d/wordpress.conf
              ServerName 127.0.0.1:80
              DocumentRoot /var/www/wordpress
              <Directory /var/www/wordpress>
                Options Indexes FollowSymLinks
                AllowOverride All
                Require all granted
              </Directory>
              EOF
              
              pecl install igbinary
              cd /tmp

              ## install WordPress and WP CLI
              curl -o /bin/wp https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
              chmod +x /bin/wp
              wget -P /tmp/ https://wordpress.org/latest.tar.gz
              tar -vxzf latest.tar.gz -C /var/www/
              cp /var/www/wordpress/wp-config-sample.php /var/www/wordpress/wp-config.php
              cd /var/www/wordpress/
              sed -i 's/database_name_here/'"$DB_NAME"'/' wp-config.php
              sed -i 's/username_here/'"$DB_USERNAME"'/' wp-config.php
              sed -i 's/password_here/'"$DB_PASSWORD"'/' wp-config.php
              sed -i 's/localhost/'"$DB_HOSTNAME"'/' wp-config.php

                # install WordPress if not installed
                # use public alb host name if wp domain name was empty
              if ! $(wp core is-installed --allow-root); then
                  wp core install --url="http://$LB_HOSTNAME" --title='Wordpress on AWS' --admin_user="$WP_ADMIN" --admin_password="$WP_PASSWORD" --admin_email="$WP_EMAIL" --allow-root
                  wp plugin install w3-total-cache --allow-root
                  chown -R apache:apache /var/www/wordpress
                  chmod u+wrx /var/www/wordpress/wp-content/*
                  if [ ! -f /var/www/wordpress/opcache-instanceid.php ]; then
                    wget -P /var/www/wordpress/ https://s3.amazonaws.com/aws-refarch/wordpress/latest/bits/opcache-instanceid.php
                  fi
              fi
              RESULT=$?
              echo $RESULT
              if [ $RESULT -eq 0 ]; then
                  touch /var/www/wordpress/wordpress.initialized
              else
                  touch /var/www/wordpress/wordpress.failed
              fi

              ## install opcache
              # create hidden opcache directory locally & change owner to apache

              mkdir -p /var/www/.opcache
              # enable opcache in /etc/php-7.0.d/10-opcache.ini
              sed -i 's/;opcache.file_cache=.*/opcache.file_cache=\/var\/www\/.opcache/' /etc/php.d/10-opcache.ini
              sed -i 's/opcache.memory_consumption=.*/opcache.memory_consumption=512/' /etc/php.d/10-opcache.ini
              # download opcache-instance.php to verify opcache status
              if [ ! -f /var/www/wordpress/opcache-instanceid.php ]; then
                  wget -P /var/www/wordpress/ https://s3.amazonaws.com/aws-refarch/wordpress/latest/bits/opcache-instanceid.php
              fi

              chkconfig httpd on
              service httpd start
            - ElasticFileSystem: !Ref WPElasticFileSystemID
              ALBDNSName: !Ref ALBDnsName
        ImageId: !Ref LatestAL2AmiId
        SecurityGroupIds:
          - !Ref WebTierSecurityGroup
          - !ImportValue EFSMountTargetSecurityGroupID
          - !ImportValue RDSSecurityGroupID
        InstanceType: !Ref EC2ServerInstanceType

Outputs:
  WPLaunchTemplate:
    Description: 'Launch Template for WordPress'
    Value:
      !Ref LabLaunchTemplate